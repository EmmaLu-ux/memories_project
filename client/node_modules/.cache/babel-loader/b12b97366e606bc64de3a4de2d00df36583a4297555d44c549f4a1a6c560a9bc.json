{"ast":null,"code":"import * as api from '../api';\nimport { CREATE, UPDATE, FETCH_ALL, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING } from '../constants/actionTypes';\n\n// action creators   thunk  异步获取数据\nexport const getPosts = page => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log('page-getPosts:', data);\n    dispatch({\n      type: FETCH_ALL,\n      playload: data\n    });\n  } catch (error) {\n    console.log('error-actions-getPosts: ', error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    console.log('search-data:', data);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      playload: data\n    });\n  } catch (error) {\n    console.log('error-actions-getPostsBySearch: ', error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    // console.log('data-actions-createPost:', data)\n    dispatch({\n      type: CREATE,\n      playload: data\n    });\n  } catch (error) {\n    console.log('error-actions-createPost: ', error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    // console.log('data: ', data)\n    dispatch({\n      type: UPDATE,\n      playload: data\n    });\n  } catch (error) {\n    console.log('error-actions-updatePost: ', error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      playload: id\n    });\n  } catch (error) {\n    console.log('error-actions-deletePost: ', error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    // console.log('data: ', data)\n    dispatch({\n      type: UPDATE,\n      playload: data\n    });\n  } catch (error) {\n    console.log('error-actions-likePost: ', error);\n  }\n};","map":{"version":3,"names":["api","CREATE","UPDATE","FETCH_ALL","DELETE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","getPosts","page","dispatch","data","fetchPosts","console","log","type","playload","error","message","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","id","deletePost","likePost"],"sources":["/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api'\n\nimport { CREATE, UPDATE, FETCH_ALL, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING } from '../constants/actionTypes'\n\n// action creators   thunk  异步获取数据\nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        const { data } = await api.fetchPosts(page)\n        console.log('page-getPosts:', data)\n        dispatch({ type: FETCH_ALL, playload: data})\n    } catch (error) {\n        console.log('error-actions-getPosts: ', error.message)\n    }\n}\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery)\n        \n        console.log('search-data:', data)\n        dispatch({ type: FETCH_BY_SEARCH, playload: data})\n    } catch (error) {\n        console.log('error-actions-getPostsBySearch: ', error.message)\n    }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const { data } = await api.createPost(post)\n        // console.log('data-actions-createPost:', data)\n        dispatch({ type: CREATE, playload: data })\n    } catch (error) {\n        console.log('error-actions-createPost: ', error.message)\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post)\n        // console.log('data: ', data)\n        dispatch({ type: UPDATE, playload: data})\n    } catch (error) {\n        console.log('error-actions-updatePost: ', error.message)\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id)\n        dispatch({ type: DELETE, playload: id})\n    } catch (error) {\n        console.log('error-actions-deletePost: ', error.message)\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likePost(id)\n        // console.log('data: ', data)\n        dispatch({ type: UPDATE, playload: data })\n    } catch (error) {\n        console.log('error-actions-likePost: ', error)\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}