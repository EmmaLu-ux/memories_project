{"ast":null,"code":"import * as api from '../api';\nimport { CREATE, UPDATE, FETCH_ALL, DELETE, LIKE } from '../constants/actionTypes';\n\n// action creators   thunk  异步获取数据\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      playload: data\n    });\n  } catch (error) {\n    console.log('error-actions-getPosts: ', error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    // console.log('data-actions-createPost:', data)\n    dispatch({\n      type: CREATE,\n      playload: data\n    });\n  } catch (error) {\n    console.log('error-actions-createPost: ', error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    console.log('data: ', data);\n    dispatch({\n      type: UPDATE,\n      playload: data\n    });\n  } catch (error) {\n    console.log('error-actions-updatePost: ', error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      playload: id\n    });\n  } catch (error) {\n    console.log('error-actions-deletePost: ', error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    // console.log('data: ', data)\n    dispatch({\n      type: LIKE,\n      playload: data\n    });\n  } catch (error) {\n    console.log('error-actions-likePost: ', error);\n  }\n};","map":{"version":3,"names":["api","CREATE","UPDATE","FETCH_ALL","DELETE","LIKE","getPosts","dispatch","data","fetchPosts","type","playload","error","console","log","message","createPost","post","updatePost","id","deletePost","likePost"],"sources":["/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api'\n\nimport { CREATE, UPDATE, FETCH_ALL, DELETE, LIKE } from '../constants/actionTypes'\n\n// action creators   thunk  异步获取数据\nexport const getPosts = () => async (dispatch) => {\n    try {\n        const { data } = await api.fetchPosts()\n        dispatch({ type: FETCH_ALL, playload: data})\n    } catch (error) {\n        console.log('error-actions-getPosts: ', error.message)\n    }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const { data } = await api.createPost(post)\n        // console.log('data-actions-createPost:', data)\n        dispatch({ type: CREATE, playload: data })\n    } catch (error) {\n        console.log('error-actions-createPost: ', error.message)\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post)\n        console.log('data: ', data)\n        dispatch({ type: UPDATE, playload: data})\n    } catch (error) {\n        console.log('error-actions-updatePost: ', error.message)\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id)\n        dispatch({ type: DELETE, playload: id})\n    } catch (error) {\n        console.log('error-actions-deletePost: ', error.message)\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likePost(id)\n        // console.log('data: ', data)\n        dispatch({ type: LIKE, playload: data })\n    } catch (error) {\n        console.log('error-actions-likePost: ', error)\n    }\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAE7B,SAASC,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAEC,MAAM,EAAEC,IAAI,QAAQ,0BAA0B;;AAElF;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,GAAG,CAACS,UAAU,EAAE;IACvCF,QAAQ,CAAC;MAAEG,IAAI,EAAEP,SAAS;MAAEQ,QAAQ,EAAEH;IAAI,CAAC,CAAC;EAChD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAACG,OAAO,CAAC;EAC1D;AACJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK,MAAOV,QAAQ,IAAK;EACpD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,GAAG,CAACgB,UAAU,CAACC,IAAI,CAAC;IAC3C;IACAV,QAAQ,CAAC;MAAEG,IAAI,EAAET,MAAM;MAAEU,QAAQ,EAAEH;IAAK,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,KAAK,CAACG,OAAO,CAAC;EAC5D;AACJ,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG,CAACC,EAAE,EAAEF,IAAI,KAAK,MAAOV,QAAQ,IAAK;EACxD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,GAAG,CAACkB,UAAU,CAACC,EAAE,EAAEF,IAAI,CAAC;IAC/CJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,IAAI,CAAC;IAC3BD,QAAQ,CAAC;MAAEG,IAAI,EAAER,MAAM;MAAES,QAAQ,EAAEH;IAAI,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,KAAK,CAACG,OAAO,CAAC;EAC5D;AACJ,CAAC;AAED,OAAO,MAAMK,UAAU,GAAID,EAAE,IAAK,MAAOZ,QAAQ,IAAK;EAClD,IAAI;IACA,MAAMP,GAAG,CAACoB,UAAU,CAACD,EAAE,CAAC;IACxBZ,QAAQ,CAAC;MAAEG,IAAI,EAAEN,MAAM;MAAEO,QAAQ,EAAEQ;IAAE,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,KAAK,CAACG,OAAO,CAAC;EAC5D;AACJ,CAAC;AAED,OAAO,MAAMM,QAAQ,GAAIF,EAAE,IAAK,MAAOZ,QAAQ,IAAK;EAChD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,GAAG,CAACqB,QAAQ,CAACF,EAAE,CAAC;IACvC;IACAZ,QAAQ,CAAC;MAAEG,IAAI,EAAEL,IAAI;MAAEM,QAAQ,EAAEH;IAAK,CAAC,CAAC;EAC5C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAAC;EAClD;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}