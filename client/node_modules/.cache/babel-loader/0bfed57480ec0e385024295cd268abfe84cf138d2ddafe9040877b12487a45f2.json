{"ast":null,"code":"var _jsxFileName = \"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Form/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const classes = useStyles();\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    tags: '',\n    selectedFile: '',\n    message: ''\n  });\n  const dispatch = useDispatch();\n  const post = useSelector(state => currentId ? state.posts.find(post => post._id === currentId) : null);\n  use;\n  const handleSubmit = e => {\n    e.preventDefault();\n    // console.log('postData:', postData)\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n  };\n  const clear = () => {};\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"\\u521B\\u5EFA\\u4E00\\u4E2AMemory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({\n          ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({\n          ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({\n          ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({\n          ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({\n              ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"\\u63D0\\u4EA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"\\u6E05\\u9664\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"h08AavMCyT/YwkEcCxAV/vC9UYY=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useStyles","createPost","updatePost","Form","currentId","setCurrentId","classes","postData","setPostData","creator","title","tags","selectedFile","message","dispatch","post","state","posts","find","_id","use","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"sources":["/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\nimport FileBase from 'react-file-base64'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport useStyles from './styles'\nimport { createPost, updatePost } from '../../actions/posts'\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const classes = useStyles()\n  const [postData, setPostData] = useState({\n    creator: '', title: '', tags: '', selectedFile: '', message: ''\n  })\n  const dispatch = useDispatch()\n  const post = useSelector(state => currentId ? state.posts.find(post => post._id === currentId) : null)\n\n  use\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    // console.log('postData:', postData)\n\n    if(currentId){\n      dispatch(updatePost(currentId, postData))\n    }else{\n      dispatch(createPost(postData))\n    }\n\n  }\n  const clear = () => {\n\n  }\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant='h6'>创建一个Memory</Typography>\n        <TextField name='creator' variant='outlined' label='Creator' fullWidth value={postData.creator} onChange={e => setPostData({ ...postData, creator: e.target.value })} />\n        <TextField name='title' variant='outlined' label='Title' fullWidth value={postData.title} onChange={e => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name='message' variant='outlined' label='Message' fullWidth value={postData.message} onChange={e => setPostData({ ...postData, message: e.target.value })} />\n        <TextField name='tags' variant='outlined' label='Tags' fullWidth value={postData.tags} onChange={e => setPostData({ ...postData, tags: e.target.value })} />\n        <div className={classes.fileInput}>\n          <FileBase type='file' multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\n        </div>\n        <Button className={classes.buttonSubmit} variant='contained' color='primary' size='large' type='submit' fullWidth>提交</Button>\n        <Button variant='contained' color='secondary' size='small' onClick={clear} fullWidth>清除</Button>\n      </form>\n    </Paper>\n  )\n}\n\nexport default Form"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}