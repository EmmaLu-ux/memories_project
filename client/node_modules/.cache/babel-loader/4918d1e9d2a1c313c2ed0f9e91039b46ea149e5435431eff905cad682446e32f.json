{"ast":null,"code":"import axios from 'axios';\n\n// 自定义创建一个新的axios实例\nconst API = axios.create({\n  baseURL: 'http://localhost:5000'\n});\n\n/* 让middleware起作用的部分 */\nAPI.interceptors.request.use(req => {\n  if (sessionStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(sessionStorage.getItem('profile')).token}`;\n  }\n  return req;\n});\n\n// const url = 'http://localhost:5000/posts'\n\nexport const fetchPosts = page => API.get(`/posts?page=${page}`);\nexport const fetchPost = id => API.get();\nexport const fetchPostsBySearch = searchQuery => API.get(`/posts/search?searchQuery=${searchQuery.search}&tags=${searchQuery.tags}`);\nexport const createPost = newPost => API.post('/posts', newPost);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = id => API.delete(`/posts/${id}`);\nexport const likePost = id => API.patch(`/posts/${id}/likeCount`);\nexport const signin = formData => API.post('/user/signin', formData);\nexport const signup = formData => API.post('/user/signup', formData);","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","sessionStorage","getItem","headers","Authorization","JSON","parse","token","fetchPosts","page","get","fetchPost","id","fetchPostsBySearch","searchQuery","search","tags","createPost","newPost","post","updatePost","updatedPost","patch","deletePost","delete","likePost","signin","formData","signup"],"sources":["/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/api/index.js"],"sourcesContent":["import axios from 'axios'\n\n// 自定义创建一个新的axios实例\nconst API = axios.create({ baseURL: 'http://localhost:5000' })\n\n/* 让middleware起作用的部分 */\nAPI.interceptors.request.use(req => {\n    if(sessionStorage.getItem('profile')){\n        req.headers.Authorization = `Bearer ${JSON.parse(sessionStorage.getItem('profile')).token}`\n    }\n    return req\n})\n\n// const url = 'http://localhost:5000/posts'\n\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`)\nexport const fetchPost = (id) => API.get()\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search}&tags=${searchQuery.tags}`)\nexport const createPost = (newPost) => API.post('/posts', newPost)\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost)\nexport const deletePost = (id) => API.delete(`/posts/${id}`)\nexport const likePost = (id) => API.patch(`/posts/${id}/likeCount`)\n\nexport const signin = (formData) => API.post('/user/signin', formData)\nexport const signup = (formData) => API.post('/user/signup', formData)"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAAwB,CAAC,CAAC;;AAE9D;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,GAAG,IAAI;EAChC,IAAGC,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC,EAAC;IACjCF,GAAG,CAACG,OAAO,CAACC,aAAa,GAAI,UAASC,IAAI,CAACC,KAAK,CAACL,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAACK,KAAM,EAAC;EAC/F;EACA,OAAOP,GAAG;AACd,CAAC,CAAC;;AAEF;;AAEA,OAAO,MAAMQ,UAAU,GAAIC,IAAI,IAAKf,GAAG,CAACgB,GAAG,CAAE,eAAcD,IAAK,EAAC,CAAC;AAClE,OAAO,MAAME,SAAS,GAAIC,EAAE,IAAKlB,GAAG,CAACgB,GAAG,EAAE;AAC1C,OAAO,MAAMG,kBAAkB,GAAIC,WAAW,IAAKpB,GAAG,CAACgB,GAAG,CAAE,6BAA4BI,WAAW,CAACC,MAAO,SAAQD,WAAW,CAACE,IAAK,EAAC,CAAC;AACtI,OAAO,MAAMC,UAAU,GAAIC,OAAO,IAAKxB,GAAG,CAACyB,IAAI,CAAC,QAAQ,EAAED,OAAO,CAAC;AAClE,OAAO,MAAME,UAAU,GAAG,CAACR,EAAE,EAAES,WAAW,KAAK3B,GAAG,CAAC4B,KAAK,CAAE,UAASV,EAAG,EAAC,EAAES,WAAW,CAAC;AACrF,OAAO,MAAME,UAAU,GAAIX,EAAE,IAAKlB,GAAG,CAAC8B,MAAM,CAAE,UAASZ,EAAG,EAAC,CAAC;AAC5D,OAAO,MAAMa,QAAQ,GAAIb,EAAE,IAAKlB,GAAG,CAAC4B,KAAK,CAAE,UAASV,EAAG,YAAW,CAAC;AAEnE,OAAO,MAAMc,MAAM,GAAIC,QAAQ,IAAKjC,GAAG,CAACyB,IAAI,CAAC,cAAc,EAAEQ,QAAQ,CAAC;AACtE,OAAO,MAAMC,MAAM,GAAID,QAAQ,IAAKjC,GAAG,CAACyB,IAAI,CAAC,cAAc,EAAEQ,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}