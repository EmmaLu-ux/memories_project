{"ast":null,"code":"import * as api from '../api';\n\n// action creators    thunk\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: 'FETCH_ALL',\n      playload: data\n    });\n  } catch (error) {\n    console.log('error-actions-getPosts: ', error.message);\n  }\n};\nexport const createPost = () => async dispatch => {\n  try {\n    const {\n      newPost\n    } = await api.createPost();\n    dispatch({\n      type: 'CREATE',\n      playload: newPost\n    });\n  } catch (error) {\n    console.log('error-actions-createPost: ', error.message);\n  }\n};","map":{"version":3,"names":["api","getPosts","dispatch","data","fetchPosts","type","playload","error","console","log","message","createPost","newPost"],"sources":["/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api'\n\n// action creators    thunk\nexport const getPosts = () => async (dispatch) => {\n    try {\n        const { data } = await api.fetchPosts()\n        dispatch({ type: 'FETCH_ALL', playload: data})\n    } catch (error) {\n        console.log('error-actions-getPosts: ', error.message)\n    }\n}\n\nexport const createPost = () => async (dispatch) => {\n    try {\n        const {newPost} = await api.createPost()\n        dispatch({ type: 'CREATE', playload: newPost})\n    } catch (error) {\n        console.log('error-actions-createPost: ', error.message)\n    }\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;;AAE7B;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,UAAU,EAAE;IACvCF,QAAQ,CAAC;MAAEG,IAAI,EAAE,WAAW;MAAEC,QAAQ,EAAEH;IAAI,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAACG,OAAO,CAAC;EAC1D;AACJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOT,QAAQ,IAAK;EAChD,IAAI;IACA,MAAM;MAACU;IAAO,CAAC,GAAG,MAAMZ,GAAG,CAACW,UAAU,EAAE;IACxCT,QAAQ,CAAC;MAAEG,IAAI,EAAE,QAAQ;MAAEC,QAAQ,EAAEM;IAAO,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,KAAK,CAACG,OAAO,CAAC;EAC5D;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}