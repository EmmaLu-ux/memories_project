{"ast":null,"code":"import { CREATE, UPDATE, FETCH_ALL, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, FETCH_POST } from '../constants/actionTypes';\nexport default (function () {\n  var _action$playload, _action$playload2, _action$playload3;\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    posts: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case END_LOADING:\n      return {\n        ...state,\n        isLoading: false\n      };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action === null || action === void 0 ? void 0 : (_action$playload = action.playload) === null || _action$playload === void 0 ? void 0 : _action$playload.data,\n        currentPage: action === null || action === void 0 ? void 0 : (_action$playload2 = action.playload) === null || _action$playload2 === void 0 ? void 0 : _action$playload2.currentPage,\n        numberOfPages: action === null || action === void 0 ? void 0 : (_action$playload3 = action.playload) === null || _action$playload3 === void 0 ? void 0 : _action$playload3.numberOfPages\n      };\n    case FETCH_POST:\n      return {\n        ...state,\n        post: action === null || action === void 0 ? void 0 : action.playload\n      };\n    case FETCH_BY_SEARCH:\n      return {\n        ...state,\n        posts: action.playload\n      };\n    // return action.playload\n    case CREATE:\n      return {\n        ...state,\n        posts: [...state.posts, action.playload]\n      };\n    case UPDATE:\n      return {\n        ...state,\n        posts: state.posts.map(post => {\n          var _action$playload4;\n          return post._id === (action === null || action === void 0 ? void 0 : (_action$playload4 = action.playload) === null || _action$playload4 === void 0 ? void 0 : _action$playload4._id) ? action === null || action === void 0 ? void 0 : action.playload : post;\n        })\n      };\n    case DELETE:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== action.playload)\n      };\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["CREATE","UPDATE","FETCH_ALL","DELETE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","FETCH_POST","state","isLoading","posts","action","type","playload","data","currentPage","numberOfPages","post","map","_id","filter"],"sources":["/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/reducers/posts.js"],"sourcesContent":["import { CREATE, UPDATE, FETCH_ALL, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, FETCH_POST } from '../constants/actionTypes'\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n    switch (action.type) {\n        case START_LOADING: \n            return { ...state, isLoading: true }\n        case END_LOADING:\n            return { ...state, isLoading: false }\n        case FETCH_ALL:\n            return { \n                ...state, \n                posts: action?.playload?.data, \n                currentPage: action?.playload?.currentPage,\n                numberOfPages: action?.playload?.numberOfPages \n            }\n        case FETCH_POST:\n            return { ...state, post: action?.playload }\n        case FETCH_BY_SEARCH:\n            return {\n                ...state,\n                posts: action.playload\n            }\n            // return action.playload\n        case CREATE:\n            return { ...state, posts: [ ... state.posts, action.playload] }\n        case UPDATE:\n            return { ...state, posts: state.posts.map(post => post._id === action?.playload?._id ? action?.playload : post)}\n        case DELETE:\n            return { ...state, posts: state.posts.filter(post => post._id !== action.playload)}\n        default:\n            return state\n    }\n}"],"mappings":"AAAA,SAASA,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAEC,MAAM,EAAEC,eAAe,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,QAAQ,0BAA0B;AAErI,gBAAe,YAAoD;EAAA;EAAA,IAAnDC,KAAK,uEAAG;IAAEC,SAAS,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC;EAAA,IAAEC,MAAM;EAC1D,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKP,aAAa;MACd,OAAO;QAAE,GAAGG,KAAK;QAAEC,SAAS,EAAE;MAAK,CAAC;IACxC,KAAKH,WAAW;MACZ,OAAO;QAAE,GAAGE,KAAK;QAAEC,SAAS,EAAE;MAAM,CAAC;IACzC,KAAKP,SAAS;MACV,OAAO;QACH,GAAGM,KAAK;QACRE,KAAK,EAAEC,MAAM,aAANA,MAAM,2CAANA,MAAM,CAAEE,QAAQ,qDAAhB,iBAAkBC,IAAI;QAC7BC,WAAW,EAAEJ,MAAM,aAANA,MAAM,4CAANA,MAAM,CAAEE,QAAQ,sDAAhB,kBAAkBE,WAAW;QAC1CC,aAAa,EAAEL,MAAM,aAANA,MAAM,4CAANA,MAAM,CAAEE,QAAQ,sDAAhB,kBAAkBG;MACrC,CAAC;IACL,KAAKT,UAAU;MACX,OAAO;QAAE,GAAGC,KAAK;QAAES,IAAI,EAAEN,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE;MAAS,CAAC;IAC/C,KAAKT,eAAe;MAChB,OAAO;QACH,GAAGI,KAAK;QACRE,KAAK,EAAEC,MAAM,CAACE;MAClB,CAAC;IACD;IACJ,KAAKb,MAAM;MACP,OAAO;QAAE,GAAGQ,KAAK;QAAEE,KAAK,EAAE,CAAE,GAAIF,KAAK,CAACE,KAAK,EAAEC,MAAM,CAACE,QAAQ;MAAE,CAAC;IACnE,KAAKZ,MAAM;MACP,OAAO;QAAE,GAAGO,KAAK;QAAEE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACQ,GAAG,CAACD,IAAI;UAAA;UAAA,OAAIA,IAAI,CAACE,GAAG,MAAKR,MAAM,aAANA,MAAM,4CAANA,MAAM,CAAEE,QAAQ,sDAAhB,kBAAkBM,GAAG,IAAGR,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,QAAQ,GAAGI,IAAI;QAAA;MAAC,CAAC;IACpH,KAAKd,MAAM;MACP,OAAO;QAAE,GAAGK,KAAK;QAAEE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACU,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACE,GAAG,KAAKR,MAAM,CAACE,QAAQ;MAAC,CAAC;IACvF;MACI,OAAOL,KAAK;EAAA;AAExB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}