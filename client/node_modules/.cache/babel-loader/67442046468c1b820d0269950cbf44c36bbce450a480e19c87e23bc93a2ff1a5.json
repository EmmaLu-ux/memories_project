{"ast":null,"code":"import * as api from '../api';\nimport { CREATE, UPDATE, FETCH_ALL, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, FETCH_POST } from '../constants/actionTypes';\n\n// action creators   thunk  异步获取数据\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page); // data: { data, currentPage, numberOfPages }\n    console.log('page-getPosts:', data);\n    dispatch({\n      type: FETCH_ALL,\n      playload: data\n    }); // data: { data, currentPage, numberOfPages }\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log('error-actions-getPosts: ', error.message);\n  }\n};\n\n/* post详情用 */\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n\n    // console.log('page-getPost:', data)\n\n    dispatch({\n      type: FETCH_POST,\n      playload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log('error-actions-getPosts: ', error.message);\n  }\n};\n\n/* 通过搜索来获取posts */\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n\n    // console.log('search-data:', data)\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      playload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log('error-actions-getPostsBySearch: ', error.message);\n  }\n};\nexport const createPost = (post, navigate) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    // console.log('data-actions-createPost:', data)\n    navigate(`/posts/${data._id}`);\n    dispatch({\n      type: CREATE,\n      playload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log('error-actions-createPost: ', error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    // console.log('data: ', data)\n    dispatch({\n      type: UPDATE,\n      playload: data\n    });\n  } catch (error) {\n    console.log('error-actions-updatePost: ', error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      playload: id\n    });\n  } catch (error) {\n    console.log('error-actions-deletePost: ', error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    // console.log('data: ', data) // 点赞的这个post数据\n    dispatch({\n      type: UPDATE,\n      playload: data\n    });\n  } catch (error) {\n    console.log('error-actions-likePost: ', error);\n  }\n};\nexport const commentPost = (value, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.comment(value, id);\n    // console.log('data-commentPost-action: ', data)\n    dispatch();\n  } catch (error) {}\n};","map":{"version":3,"names":["api","CREATE","UPDATE","FETCH_ALL","DELETE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","FETCH_POST","getPosts","page","dispatch","type","data","fetchPosts","console","log","playload","error","message","getPost","id","fetchPost","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","navigate","_id","updatePost","deletePost","likePost","commentPost","value","comment"],"sources":["/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api'\n\nimport { CREATE, UPDATE, FETCH_ALL, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, FETCH_POST } from '../constants/actionTypes'\n\n// action creators   thunk  异步获取数据\nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data } = await api.fetchPosts(page) // data: { data, currentPage, numberOfPages }\n        console.log('page-getPosts:', data)\n        dispatch({ type: FETCH_ALL, playload: data}) // data: { data, currentPage, numberOfPages }\n        dispatch({ type: END_LOADING })\n    } catch (error) {\n        console.log('error-actions-getPosts: ', error.message)\n    }\n}\n\n/* post详情用 */\nexport const getPost = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data } = await api.fetchPost(id)\n        \n        // console.log('page-getPost:', data)\n\n        dispatch({ type: FETCH_POST, playload: data })\n        dispatch({ type: END_LOADING })\n    } catch (error) {\n        console.log('error-actions-getPosts: ', error.message)\n    }\n}\n\n/* 通过搜索来获取posts */\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery)\n        \n        // console.log('search-data:', data)\n        dispatch({ type: FETCH_BY_SEARCH, playload: data})\n        dispatch({ type: END_LOADING })\n    } catch (error) {\n        console.log('error-actions-getPostsBySearch: ', error.message)\n    }\n}\n\nexport const createPost = (post, navigate) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data } = await api.createPost(post)\n        // console.log('data-actions-createPost:', data)\n        navigate(`/posts/${data._id}`)\n        dispatch({ type: CREATE, playload: data })\n        dispatch({ type: END_LOADING })\n    } catch (error) {\n        console.log('error-actions-createPost: ', error.message)\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post)\n        // console.log('data: ', data)\n        dispatch({ type: UPDATE, playload: data})\n    } catch (error) {\n        console.log('error-actions-updatePost: ', error.message)\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id)\n        dispatch({ type: DELETE, playload: id})\n    } catch (error) {\n        console.log('error-actions-deletePost: ', error.message)\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likePost(id)\n        // console.log('data: ', data) // 点赞的这个post数据\n        dispatch({ type: UPDATE, playload: data })\n    } catch (error) {\n        console.log('error-actions-likePost: ', error)\n    }\n}\n\nexport const commentPost = (value, id) => async (dispatch) => {\n    try {\n        const { data } = await api.comment(value, id)\n        // console.log('data-commentPost-action: ', data)\n        dispatch()\n    } catch (error) {\n        \n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}