[{"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/index.js":"1","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/App.js":"2","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Posts/Posts.js":"3","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Form/Form.js":"4","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Posts/Post/Post.js":"5","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/styles.js":"6","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Posts/styles.js":"7","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Posts/Post/styles.js":"8","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Form/styles.js":"9","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/reducers/index.js":"10","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/reducers/posts.js":"11","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/actions/posts.js":"12","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/api/index.js":"13","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/constants/actionTypes.js":"14","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Navbar/Navbar.js":"15","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Navbar/styles.js":"16","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Home/Home.js":"17","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Home/styles.js":"18","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Auth/Auth.js":"19","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Auth/styles.js":"20","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Auth/Input.js":"21","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Auth/Icon.js":"22","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/reducers/auth.js":"23","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/actions/auth.js":"24","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/styles.js":"25","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Pagination.jsx":"26","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/PostDetails/PostDetails.jsx":"27","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/PostDetails/styles.js":"28","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/PostDetails/CommentSection.jsx":"29"},{"size":588,"mtime":1675910823288,"results":"30","hashOfConfig":"31"},{"size":1186,"mtime":1676274571222,"results":"32","hashOfConfig":"31"},{"size":817,"mtime":1676356665173,"results":"33","hashOfConfig":"31"},{"size":3082,"mtime":1676292986228,"results":"34","hashOfConfig":"31"},{"size":3599,"mtime":1676382912457,"results":"35","hashOfConfig":"31"},{"size":0,"mtime":1675910893120,"results":"36","hashOfConfig":"31"},{"size":1341,"mtime":1676281397867,"results":"37","hashOfConfig":"31"},{"size":1031,"mtime":1676275913201,"results":"38","hashOfConfig":"31"},{"size":424,"mtime":1675847140268,"results":"39","hashOfConfig":"31"},{"size":147,"mtime":1675922725795,"results":"40","hashOfConfig":"31"},{"size":1621,"mtime":1676361204730,"results":"41","hashOfConfig":"31"},{"size":3294,"mtime":1676361006430,"results":"42","hashOfConfig":"31"},{"size":1203,"mtime":1676353602609,"results":"43","hashOfConfig":"31"},{"size":423,"mtime":1676361023532,"results":"44","hashOfConfig":"31"},{"size":2462,"mtime":1676387120048,"results":"45","hashOfConfig":"31"},{"size":1333,"mtime":1676275856141,"results":"46","hashOfConfig":"31"},{"size":3664,"mtime":1676356840493,"results":"47","hashOfConfig":"31"},{"size":407,"mtime":1676352856311,"results":"48","hashOfConfig":"31"},{"size":3936,"mtime":1676296634804,"results":"49","hashOfConfig":"31"},{"size":637,"mtime":1675911963732,"results":"50","hashOfConfig":"31"},{"size":1007,"mtime":1675921813563,"results":"51","hashOfConfig":"31"},{"size":501,"mtime":1675917883718,"results":"52","hashOfConfig":"31"},{"size":516,"mtime":1676007072455,"results":"53","hashOfConfig":"31"},{"size":802,"mtime":1676264802152,"results":"54","hashOfConfig":"31"},{"size":148,"mtime":1676268246218,"results":"55","hashOfConfig":"31"},{"size":875,"mtime":1676351370861,"results":"56","hashOfConfig":"31"},{"size":3249,"mtime":1676360108416,"results":"57","hashOfConfig":"31"},{"size":1035,"mtime":1676360212243,"results":"58","hashOfConfig":"31"},{"size":2155,"mtime":1676362457724,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"1mg3fus",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"63"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/index.js",[],[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/App.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Posts/Posts.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Form/Form.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Posts/Post/Post.js",["157"],[],"import React, { useState } from 'react'\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core'\nimport { ThumbUpAlt, Delete, MoreHoriz, ThumbUpAltOutlined } from '@material-ui/icons'\nimport moment from 'moment'\nimport { useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nimport useStyles from './styles'\nimport { deletePost, likePost } from '../../../actions/posts'\n\nconst Post = ({ post, setCurrentId }) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const user = JSON.parse(sessionStorage.getItem('profile'))\n  const navigate = useNavigate()\n  const [likes, setLikes] = useState(post?.likes)\n  const userId = user?.result?.sub || user?.result?._id\n  const hasLikedPost = post.likes.find(like => like === userId)\n\n  const handleLike = async () => {\n    dispatch(likePost(post._id))\n    if(hasLikedPost){ // 已经点赞过了，再点就是取消点赞\n      setLikes(post.likes.filter(id => id !== userId))\n    }else{ // 现在点赞，把该用户的id存进likes中\n      setLikes([...post.likes, userId])\n    }\n  }\n  const Likes = () => {\n    if (likes.length > 0) {\n      return likes.find(like => like === userId)\n        ? (<><ThumbUpAlt fontSize=\"small\" />\n          &nbsp;{likes.length > 2 ? `您和其他${likes.length - 1}人` : `${likes.length}人喜欢`}</>\n        ) : (\n          <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{likes.length}人喜欢</>\n        );\n    }\n    return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;喜欢</>;\n  };\n\n  const openPost = () => navigate(`/posts/${post._id}`)\n  \n\n  return (\n    <Card className={classes.card} raised elevation={6}>\n      {/* <ButtonBase className={classes.cardAction} onClick={openPost}> */}\n        <CardMedia component='div' className={classes.media} image={post.selectedFile || ''} title={post.title} onClick={openPost} style={{ cursor: 'pointer'}}/>\n        <div className={classes.overlay}>\n          <Typography variant='h6'>{post.name}</Typography>\n          <Typography variant='body2'>{moment(post.createdAt).fromNow()}</Typography>\n        </div>\n        {(user?.result?.sub === post?.creator || user?.result?._id === post?.creator) ? (\n          <div className={classes.overlay2}>\n            <Button style={{ color: 'white' }} size='small'\n              onClick={() => setCurrentId(post._id)}>\n              <MoreHoriz fontSize='medium' />\n            </Button>\n          </div>\n        ) : null }\n\n        <div className={classes.details}>\n          <Typography variant='body2' color='textSecondary' gutterBottom>{post.tags.map(tag => `#${tag} `)}</Typography>\n        </div>\n        <Typography className={classes.title} variant='h5' gutterBottom>{post.title}</Typography>\n        <CardContent>\n          <Typography variant='body2' color='textSecondary' gutterBottom>{post.message}</Typography>\n        </CardContent>\n      {/* </ButtonBase> */}\n      <CardActions className={classes.cardActions}>\n        <Button size='small' color='primary'\n          disabled={!user?.result}\n          onClick={handleLike}>\n          {/* <ThumbUpAlt fontSize='small'/>\n          喜欢 &nbsp;\n          {post.likeCount} */}\n          <Likes />\n        </Button>\n        {(user?.result?.sub === post?.creator || user?.result?._id === post?.creator) ? (\n          <Button size='small' color='primary'\n            onClick={() => dispatch(deletePost(post._id))}>\n            <Delete fontSize='small' />\n            删除\n          </Button>\n        ) : null }\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default Post","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/styles.js",[],[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Posts/styles.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Posts/Post/styles.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Form/styles.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/reducers/index.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/reducers/posts.js",["158"],[],"import { CREATE, UPDATE, FETCH_ALL, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, FETCH_POST, COMMENT } from '../constants/actionTypes'\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n    switch (action.type) {\n        case START_LOADING: \n            return { ...state, isLoading: true }\n        case END_LOADING:\n            return { ...state, isLoading: false }\n        case FETCH_ALL:\n            return { \n                ...state, \n                posts: action?.playload?.data, \n                currentPage: action?.playload?.currentPage,\n                numberOfPages: action?.playload?.numberOfPages \n            }\n        case FETCH_POST:\n            return { ...state, post: action?.playload }\n        case FETCH_BY_SEARCH:\n            return {\n                ...state,\n                posts: action.playload\n            }\n            // return action.playload\n        case CREATE:\n            return { ...state, posts: [ ...state.posts, action.playload] }\n        case UPDATE:\n            return { ...state, posts: state.posts.map(post => post._id === action?.playload?._id ? action?.playload : post)}\n        case COMMENT: \n            return {\n                ...state,\n                posts: state.posts.map(post => {\n                    if(post._id === action.playload._id){\n                        return action.playload\n                    }\n                    return post\n                })\n            }\n        case DELETE:\n            return { ...state, posts: state.posts.filter(post => post._id !== action.playload)}\n        default:\n            return state\n    }\n}","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/actions/posts.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/api/index.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/constants/actionTypes.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Navbar/Navbar.js",["159"],[],"import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core'\nimport { useDispatch } from 'react-redux'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport decode from 'jwt-decode'\n\nimport memoriesLogo from '../../images/memories-Logo.png'\nimport memoriesText from '../../images/memories-Text.png'\nimport useStyles from './styles'\nimport { LOGOUT } from '../../constants/actionTypes'\n\nconst Navbar = () => {\n    const classes = useStyles()\n    const [user, setUser] = useState(JSON.parse(sessionStorage.getItem('profile')))\n    // console.log('user: ', user)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const location = useLocation()\n\n    const logout = () => {\n        dispatch({ type: LOGOUT })\n        navigate('/', { replace: true })\n        setUser(null)\n    }\n\n    useEffect(() => {\n        const token = user?.token\n        if(token){\n            const decodeToken = decode(token)\n            if(decodeToken.exp * 1000 < new Date().getTime()) logout()\n        }\n        setUser(JSON.parse(sessionStorage.getItem('profile')))\n    }, [location])\n    \n    return (\n        <AppBar className={classes.appBar} position='static' color='inherit'>\n            <Link to='/' className={classes.brandContainer}>\n                {/* <Typography component={Link} to='/' className={classes.heading} variant='h2' align='center'>Memories</Typography> */}\n                <img src={memoriesText} alt='icon' height='45px'/>\n                <img className={classes.image} src={memoriesLogo} alt='memories' height='50px' />\n            </Link>\n            <Toolbar className={classes.toolbar}>\n                {user ? (\n                    <div className={classes.profile}>\n                        <Avatar className={classes.purple} alt={user?.result?.name} src={user?.result?.picture}>{user?.result?.name.charAt(0)}</Avatar>\n                        <Typography className={classes.userName} variant='h6'>{user?.result?.name}</Typography>\n                        <Button variant='contained' className={classes.logout} color='secondary' onClick={logout}>退出登录</Button>\n                    </div>\n                ) : (\n                    <Button component={Link} to='/auth' variant='contained' color='primary'>登录</Button>\n                )}\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Navbar","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Navbar/styles.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Home/Home.js",["160","161"],[],"import React, { useState, useEffect } from 'react'\nimport { Container, Grow, Grid, Paper, AppBar, TextField, Button } from '@material-ui/core'\nimport { useDispatch } from 'react-redux'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport ChipInput from 'material-ui-chip-input'\n\nimport Posts from '../Posts/Posts'\nimport Form from '../Form/Form'\nimport Pagination from '../Pagination'\nimport useStyles from './styles'\nimport { getPosts, getPostsBySearch } from '../../actions/posts'\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search)\n}\n\nconst Home = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const [currentId, setCurrentId] = useState(null)\n    const navigate = useNavigate()\n    const query = useQuery()\n    const page = query.get('page') || 1 // 监视着浏览器地址栏的地址是否有page这个参数，有就获取其值，没有就为1\n    const searchQuery = query.get('searchQuery') // 监视着浏览器地址栏的地址是否有search这个参数，有就获取其值，没有就没有\n    const [search, setSearch] = useState('')\n    const [tags, setTags] = useState([]) // [a, b] -> 'a, b'\n\n    // useEffect(() => {\n    //     dispatch(getPosts())\n    // }, [dispatch])\n\n    const searchPost = () => {\n        if (search.trim() || tags) {\n            // dispatch(searchAction) -> 获取posts\n            // console.log(tags instanceof Array) // Array\n            dispatch(getPostsBySearch({ search, tags: tags.join(',') }))\n            navigate(`/posts/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`)\n        } else {\n            navigate('/')\n        }\n    }\n\n    const handleKeyDown = (e) => {\n        if (e.keyCode === 13) {\n            // 搜索post\n            searchPost()\n        }\n    }\n\n    const handleAdd = tag => setTags([ ...tags, tag ])\n    const handleDelete = tagToDelete => setTags(tags.filter(tag => tag !== tagToDelete))\n    return (\n        <Grow in>\n            <Container maxWidth='xl'>\n                <Grid container className={classes.gridContainer} justifyContent='space-between' alignItems='stretch' spacing={3}>\n                    <Grid item xs={12} sm={6} md={9}>\n                        <Posts setCurrentId={setCurrentId} />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={3}>\n                        <AppBar className={classes.appBarSearch} position='static' color='inherit'>\n                            <TextField name='search' label='搜索' variant='outlined' fullWidth value={search} onChange={(e) => setSearch(e.target.value)} onKeyDown={handleKeyDown} />\n                            <ChipInput\n                                style={{ margin: '10px 0' }}\n                                value={tags}\n                                onAdd={handleAdd}\n                                onDelete={handleDelete}\n                                label='搜索标签'\n                                variant='outlined'\n                            />\n                            <Button onClick={searchPost} className={classes.appBarSearch} color='primary' variant='contained'>搜索</Button>\n                        </AppBar>\n                        <Form currentId={currentId} setCurrentId={setCurrentId} />\n                        {(!searchQuery && !tags.length) && (\n                            <Paper elevation={6} className={classes.pagination}>\n                                <Pagination page={page} />\n                            </Paper>\n                        )}\n                    </Grid>\n                </Grid>\n            </Container>\n        </Grow>\n    )\n}\n\nexport default Home","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Home/styles.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Auth/Auth.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Auth/styles.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Auth/Input.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Auth/Icon.js",[],[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/reducers/auth.js",["162"],[],"import { AUTH, LOGOUT } from '../constants/actionTypes'\n\nexport default (state = { authData: null }, action) => {\n    switch (action.type) {\n        case AUTH:\n            // console.log(action?.playload)\n            sessionStorage.setItem('profile', JSON.stringify({ ...action?.playload }))\n            \n            return { ...state, authData: action?.playload}\n        case LOGOUT:\n            sessionStorage.clear()\n            return { ...state, authData: null}\n        default:\n            return state\n    }\n}","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/actions/auth.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/styles.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/Pagination.jsx",["163"],[],"import React, { useEffect } from \"react\";\nimport { Pagination, PaginationItem } from \"@material-ui/lab\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport useStyles from \"./styles\";\nimport { getPosts } from '../actions/posts'\n\nconst Paginate = ({ page }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  const { numberOfPages } = useSelector(state => state.posts) \n\n  useEffect(() => {\n    if(page) dispatch(getPosts(page))\n  }, [page])\n  \n  return (\n    <Pagination\n      classes={{ ul: classes.ul }}\n      count={numberOfPages}\n      page={Number(page) || 1}\n      variant=\"outlined\"\n      // shape=\"rounded\"\n      color=\"primary\"\n      renderItem={(item) => (\n        <PaginationItem {...item} component={Link} to={`/posts?page=${item.page}`} />\n      )}\n    />\n  );\n};\n\nexport default Paginate;\n","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/PostDetails/PostDetails.jsx",["164","165","166"],[],"import React, { useEffect } from 'react'\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport moment from 'moment'\n\nimport useStyles from './styles'\nimport { getPost, getPostsBySearch } from '../../actions/posts'\nimport CommentSection from './CommentSection'\n\nconst PostDetails = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const { post, posts, isLoading } = useSelector(state => state.posts)\n  const navigate = useNavigate()\n  const { id } = useParams()\n\n  useEffect(() => {\n    dispatch(getPost(id))\n  }, [id])\n\n  useEffect(() => {\n    if(post){\n      dispatch(getPostsBySearch({ search: '', tags: post?.tags.join(',')}))\n    }\n  }, [post])\n\n  if(!post) return null\n\n  if(isLoading){\n    return <Paper elevation={6} className={classes.loadingPaper}>\n      <CircularProgress size='7em'/>\n    </Paper>\n  }\n  const recommendedPosts = posts.filter(({_id}) => _id !== post._id)\n\n  const openPost = (_id) => navigate(`/posts/${_id}`)\n  return (\n    <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n      <div className={classes.card}>\n        <div className={classes.section}>\n          <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\n          <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n          <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\n          <Typography variant=\"h6\">Created by: {post.name}</Typography>\n          <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\n          <Divider style={{ margin: '20px 0' }} />\n          <Typography variant=\"body1\"><strong>Realtime Chat - coming soon!</strong></Typography>\n          <Divider style={{ margin: '20px 0' }} />\n          {/* <Typography variant=\"body1\"><strong>Comments - coming soon!</strong></Typography> */}\n          <CommentSection post={post}/>\n          <Divider style={{ margin: '20px 0' }} />\n        </div>\n        <div className={classes.imageSection} >\n          <img className={classes.media} src={post.selectedFile || ''} alt={post.title} />\n        </div>\n      </div>\n      {recommendedPosts?.length && (\n        <div className={classes.section}>\n          <Typography variant='h5' gutterBottom>你可能也喜欢：</Typography>\n          <Divider />\n          <div className={classes.recommendedposts}>\n            {recommendedPosts?.map(({ title, name, message, selectedFile, likes, _id }, i) => (\n              <div style={{ margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={i}>\n                <Typography variant='h6' gutterBottom>{title}</Typography>\n                <Typography variant='subtitle2' gutterBottom>{name}</Typography>\n                <Typography variant='subtitle2' gutterBottom>{message}</Typography>\n                <Typography variant='subtitle1'>喜欢：{likes.length}</Typography>\n                <img src={selectedFile} width='200px'/>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </Paper>\n  )\n}\n\nexport default PostDetails","/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/PostDetails/styles.js",[],[],"/Users/emmalu/Documents/fronted/workspace/reactProjects/memories_project/client/src/components/PostDetails/CommentSection.jsx",[],[],{"ruleId":"167","severity":1,"message":"168","line":2,"column":73,"nodeType":"169","messageId":"170","endLine":2,"endColumn":83},{"ruleId":"171","severity":1,"message":"172","line":3,"column":1,"nodeType":"173","endLine":43,"endColumn":2},{"ruleId":"174","severity":1,"message":"175","line":34,"column":8,"nodeType":"176","endLine":34,"endColumn":18,"suggestions":"177"},{"ruleId":"167","severity":1,"message":"178","line":1,"column":27,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"179","line":11,"column":10,"nodeType":"169","messageId":"170","endLine":11,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":3,"column":1,"nodeType":"173","endLine":16,"endColumn":2},{"ruleId":"174","severity":1,"message":"180","line":16,"column":6,"nodeType":"176","endLine":16,"endColumn":12,"suggestions":"181"},{"ruleId":"174","severity":1,"message":"180","line":20,"column":6,"nodeType":"176","endLine":20,"endColumn":10,"suggestions":"182"},{"ruleId":"174","severity":1,"message":"180","line":26,"column":6,"nodeType":"176","endLine":26,"endColumn":12,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":69,"column":17,"nodeType":"186","endLine":69,"endColumn":56},"no-unused-vars","'ButtonBase' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["187"],"'useEffect' is defined but never used.","'getPosts' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["188"],["189"],["190"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"199","text":"200"},"Update the dependencies array to be: [dispatch, page]",{"range":"201","text":"202"},"Update the dependencies array to be: [dispatch, id]",{"range":"203","text":"204"},"Update the dependencies array to be: [dispatch, post]",{"range":"205","text":"206"},[1193,1203],"[location, logout, user?.token]",[505,511],"[dispatch, page]",[684,688],"[dispatch, id]",[812,818],"[dispatch, post]"]